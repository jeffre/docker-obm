<?xml version="1.0" encoding="ISO-8859-1" ?>

<project name="shutdown-cdp" default="shutdown-cdp">

  <target name="shutdown-cdp">
    <antcall target="shutdown-cdp-with-exe" inheritAll="true" />
  </target>

  <target name="shutdown-cdp-with-exe" if="aua.os.family.is.windows">
    <echo message="Get Current Status of CDPService ..." />
    <antcall inheritall="true" target="get-cdp-service-status"/>
    <echo message="Shutdown Continuous Data Protection service" />
    <antcall inheritall="true" target="service-stop-cdp-process"/>
    <antcall inheritall="true" target="taskkill-cdp-process"/>
  </target>

  <target name="get-cdps-service-name">
    <xmlproperty file="${aua.file.work.config}"/>
    <condition property="aua.win.service.name.new.cdpservice" value="OBCDPService" else="OBACDPService">
      <equals arg1="${auotupdate.product.name}" arg2="obm"/>
    </condition>
  </target>

  <target name="check-observices-properites-file-exist">
    <condition property="flag.is.observices.properties.file.exist">
      <available file="${aua.file.work.ipc.services.observices.properties}" />
    </condition>
  </target>

  <target name="load-observices-properties" depends="check-observices-properites-file-exist" if="flag.is.observices.properties.file.exist">
    <loadproperties srcfile="${aua.file.work.ipc.services.observices.properties}" />
  </target>

  <target name="get-cdp-service-status" depends="load-observices-properties, get-cdps-service-name">
    <exec executable="${aua.dir.home.util.bin}${fs}${executable.win.service.command}" failonerror="false" spawn="false" outputproperty="observice.cdpservice.service.status" resultproperty="observice.cdpservice.service.cmd.return.value">
      <arg line="-q ${aua.win.service.name.new.cdpservice}"/>
    </exec>
    <ant antfile="service-status-tools.xml" target="export-properties" inheritall="true">
      <property name="param.filepath.properties.file" value="${aua.file.work.ipc.services.observices.properties}" />
      <property name="param.dir.properties.file.base.dir" value="${aua.dir.work.ipc.services}" />
      <property name="param.prefix.export.properties" value="observice." />
    </ant>
  </target>

  <target name="service-stop-cdp-process" depends="get-cdps-service-name">
    <property name="executable.win.net.command" value="net.exe" />
    <exec executable="${executable.win.net.command}" spawn="true">
      <arg line='stop "${aua.win.service.name.new.cdpservice}"' />
    </exec>
  </target>

  <target name="taskkill-cdp-process">
    <antcall inheritall="true" target="taskkill-process-x32">
      <param name="param.taskkill.module.fullpath"  value="${aua.dir.home.bin}${fs}CDPService.exe"/>
    </antcall>
    <antcall inheritall="true" target="taskkill-process-x64">
      <param name="param.taskkill.module.fullpath"  value="${aua.dir.home.bin}${fs}CDPService.exe"/>
    </antcall>
    <antcall inheritall="true" target="taskkill-process-x64">
      <param name="param.taskkill.module.fullpath"  value="${aua.dir.home.bin}${fs}CDPService64.exe"/>
    </antcall>
  </target>

  <target name="verify-os-architecture">
    <condition property="flag.os.is.x86">
        <os arch="x86"/>
    </condition>
  </target>
  
  <target name="taskkill-process-x32" depends="verify-os-architecture" if="flag.os.is.x86">
    <exec executable="${aua.dir.work.bin}${fs}AuaTaskkill.exe" spawn="true">
      <arg line='"${param.taskkill.module.fullpath}"' />
    </exec>
  </target>

  <target name="taskkill-process-x64" depends="verify-os-architecture" unless="flag.os.is.x86">
    <exec executable="${aua.dir.work.bin}${fs}AuaTaskkill64.exe" spawn="true">
      <arg line='"${param.taskkill.module.fullpath}"' />
    </exec>
  </target>

</project>